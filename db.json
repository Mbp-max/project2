{
  "projects": [
    {
      "id": 0,
      "Phase": "0",
      "name": "Phase 0: Pre-Work",
      "description": "CSS (Cascading Style Sheets) allows you to create great-looking web pages, but how does it work under the hood? This article explains what CSS is, with a simple syntax example, and also covers some key terms about the language. CSS is a language for specifying how documents are presented to users — how they are styled, laid out, etc.                                              HTML: HTML, or HyperText Markup Language, allows web users to create and structure sections, paragraphs, and links using elements, tags, and attributes. However, it’s worth noting that HTML is not considered a programming language as it can’t create dynamic functionality. HTML has a lot of use cases, namely:   Web development. Developers use HTML code to design how a browser displays web page elements, such as text, hyperlinks, and media files. Internet navigation. Users can easily navigate and insert links between related pages and websites as HTML is heavily used to embed hyperlinks. Web documentation. HTML makes it possible to organize and format documents, similarly to Microsoft Word. Git is the most commonly used version control system. Git tracks the changes you make to files, so you have a record of what has been done, and you can revert to specific versions should you ever need to. Git also makes collaboration easier, allowing changes by multiple people to all be merged into one source. So regardless of whether you write code that only you will see, or work as part of a team, Git will be useful for you.",
      "videos": [
        {
          "title": "Learn Git In 15 Minutes",
          "url": "https://www.youtube.com/watch?v=USjZcfj8yxE"
        },
        {
          "title": "HTML In 10 Minutes",
          "url": "https://www.youtube.com/watch?v=MDLn5-zSQQI"
        },
        {
          "title": "Learn Git In 15 Minutes",
          "url": "https://www.youtube.com/watch?v=USjZcfj8yxE"
        }
      ],
      "feedback": {
        "username": "",
        "content": ""
      }
    },
    {
      "id": 1,
      "Phase": "1",
      "name": "Phase 1: Front-End Development - Javascript",
      "description": "After diving into the fundamentals of programming, students get comfortable with JavaScript basics, interacting with the DOM, and event listeners. JavaScript is a scripting or programming language that allows you to implement complex features on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, etc. — you can bet that JavaScript is probably involved. It is the third layer of the layer cake of standard web technologies, two of which (HTML and CSS) we have covered in much more detail in other parts of the Learning Area. What is DOM ? The Document Object Model (DOM) is a programming interface for web documents. It represents the page so that programs can change the document structure, style, and content. The DOM represents the document as nodes and objects; that way, programming languages can interact with the page. What is an API? API is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other. Each time you use an app like Facebook, send an instant message, or check the weather on your phone, you’re using an API.",
      "videos": [
        {
          "title": "What is JavaScript?",
          "url": "https://www.youtube.com/watch?v=upDLs1sn7g4&t"
        },
        {
          "title": "Javascript Variables & Data Types",
          "url": "https://www.youtube.com/watch?v=edlFjlzxkSI"
        },
        {
          "title": "Javascript If Else Statements",
          "url": "https://www.youtube.com/watch?v=_5SgikgFf0U"
        },
        {
          "title": "JavaScript Functions",
          "url": "https://www.youtube.com/watch?v=N8ap4k_1QEQ"
        },
        {
          "title": "WHAT IS A CALLBACK FUNCTION IN JAVASCRIPT?",
          "url": "https://www.youtube.com/watch?v=qtfi4-8dj9c"
        },
        {
          "title": "8 Must Know JavaScript Array Methods",
          "url": "https://www.youtube.com/watch?v=R8rmfD9Y5-c"
        },
        {
          "title": "Learn Fetch API in 6 Minutes",
          "url": "https://www.youtube.com/watch?v=cuEtnrL9-H0&t=2s"
        }
      ]
    },
    {
      "id": 2,
      "Phase": "2",
      "name": "Phase 2: Front-End Web Applications",
      "description": "Students learn React, an object-oriented JavaScript framework, and have the opportunity to pick up key industry skills by building a project that interacts with an API. What is React? React is a JavaScript-based UI development library. Facebook and an open-source developer community run it. Although React is a library rather than a language, it is widely used in web development. The library first appeared in May 2013 and is now one of the most commonly used frontend libraries for web development. Why React? 1. Easy creation of dynamic applications: React makes it easier to create dynamic web applications because it requires less coding and offers more functionality, as opposed to JavaScript, where coding often gets complex very quickly. 2. Improved performance: React uses Virtual DOM, thereby creating web applications faster. Virtual DOM compares the components’ previous states and updates only the items in the Real DOM that were changed, instead of updating all of the components again, as conventional web applications do. 3. Reusable components: Components are the building blocks of any React application, and a single app usually consists of multiple components. These components have their logic and controls, and they can be reused throughout the application, which in turn dramatically reduces the application’s development time.",
      "videos": [
        {
          "title": "What Is React (React js) & Why Is It So Popular?",
          "url": "https://www.youtube.com/watch?v=N3AkSS5hXMA"
        },
        {
          "title": "ReactJS Tutorial - 4 - Components",
          "url": "https://www.youtube.com/watch?v=Y2hgEGPzTZY"
        },
        {
          "title": "React State Vs Props",
          "url": "https://www.youtube.com/watch?v=IYvD9oBCuJI"
        },
        {
          "title": "Passing Data with Props",
          "url": "https://www.youtube.com/watch?v=GIU8ekYndKw"
        },
        {
          "title": "Event Handling",
          "url": "https://www.youtube.com/watch?v=Znqv84xi8Vs"
        },
        {
          "title": "How To Create Forms In React",
          "url": "https://www.youtube.com/watch?v=bU_eq8qyjic"
        },
        {
          "title": "React Hooks Explained",
          "url": "https://www.youtube.com/watch?v=O6P86uwfdR0"
        },
        {
          "title": "React For Beginners",
          "url": "https://www.youtube.com/watch?v=Law7wfdg_ls"
        }
      ]
    },
    {
      "id": 3,
      "Phase": "3",
      "name": "Phase 3: Back-End Development",
      "description": "Students gain a thorough understanding of back-end development basics, using languages such as Ruby,before getting comfortable with object-oriented programming and storing information in databases using SQL and Object Relational Mappers. What is Ruby ? Ruby is a pure object-oriented programming language. It was created in 1993 by Yukihiro Matsumoto of Japan. You can find the name Yukihiro Matsumoto on the Ruby mailing list at www.ruby-lang.org. Matsumoto is also known as Matz in the Ruby community.b Ruby is A Programmer's Best Friend. Ruby has features that are similar to those of Smalltalk, Perl, and Python. Perl, Python, and Smalltalk are scripting languages. Smalltalk is a true object-oriented language. Ruby, like Smalltalk, is a perfect object-oriented language. Using Ruby syntax is much easier than using Smalltalk syntax. What are Object Relational Mappers? Object-relational-mapping is the idea of being able to write queries like the one above, as well as much more complicated ones, using the object-oriented paradigm of your preferred programming language.",
      "videos": [
        {
          "title": "What You Need to Know to be a Backend Developer",
          "url": "https://www.youtube.com/watch?v=0Kv_k4ypj6o"
        },
        {
          "title": "How The Backend Works",
          "url": "https://www.youtube.com/watch?v=4r6WdaY3SOA"
        },
        {
          "title": "What is HTTP? | HTTP explained in 6 minutes ",
          "url": "https://www.youtube.com/watch?v=M7nO5Sw1esU"
        },
        {
          "title": "DNS Explained",
          "url": "https://www.youtube.com/watch?v=72snZctFFtA"
        },
        {
          "title": "What is a Server? Servers vs Desktops Explained",
          "url": "https://www.youtube.com/watch?v=UjCDWCeHCzY"
        },
        {
          "title": "What is an API?",
          "url": "https://www.youtube.com/watch?v=s7wmiS2mSXY"
        },
        {
          "title": "All You Need To Know About Backend Engineering ",
          "url": "https://www.youtube.com/watch?v=cLK5vqPv6JQ"
        }
      ]
    },
    {
      "id": 4,
      "Phase": "4",
      "name": "Phase 4: Back-End Web APIs",
      "description": "First, students will learn Rails - an object-oriented, Ruby framework, before using it to create their own JSON API along with productive, scalable front-ends with React and Redux, creating slick, functional, reactive code. What is Ruby on Rails? Ruby on Rails is software code built on top of Ruby. Technically, it is defined as a package library called RubyGem, installed using the command line interface of the operating system. Ruby on Rails is an open-source web development framework, which provides Ruby developers a timesaving alternative to develop code. It is a collection of code libraries, which offer a ready-made solution for repetitive tasks like developing tables, forms or menus on the website. It combines the Ruby programming language with JavaScript, HTML, and CSS to develop web apps that execute on a web server. Since it runs on the webserver, Ruby on Rails is categorized as back-end or server-side web application development platform. Ruby on Rails is like PHP on Laravel and Symfony, or as a Python on Django. The major appeal of Ruby on Rails towards the developers lies beneath the compactness and elegance of the language. It is designed to support agile development to deliver productivity and flexibility for development teams.",
      "videos": [
        {
          "title": "How much can you learn about the Backend from its API?",
          "url": "https://www.youtube.com/watch?v=P39KP7fpxQE"
        },
        {
          "title": "Build your first Rails app - blog with comments (tutorial)",
          "url": "https://www.youtube.com/watch?v=wbZ6yrVxScM?"
        },
        {
          "title": "Rails 6 API Tutorial - Basic controllers and models ",
          "url": "https://www.youtube.com/watch?v=nCb_mqAKusg&t=2s"
        },
        {
          "title": "Rails 6 API Tutorial - Building a POST Endpoint",
          "url": "https://www.youtube.com/watch?v=rFHCMu2t4SY"
        },
        {
          "title": "Rails 6 API Tutorial - Destroy Controller Action",
          "url": "https://www.youtube.com/watch?v=kzdE91zIp-k"
        },
        {
          "title": "Rails 6 API Tutorial - RSpec API Tests POST/DELETE",
          "url": "https://www.youtube.com/watch?v=u7TglqnXbDw"
        }
      ]
    },
    {
      "id": 5,
      "Phase": "5",
      "name": "Phase 5: Cumulative Project",
      "description": "After completing four curriculum phases focused on group projects, students work with instructors to come up with solo project concepts and spend dedicated time building truly sophisticated applications on their own. Students receive plenty of instructor feedback along the way, while diving deep into various advanced technologies needed to bring their concepts to life. 10 tips to start building your own React projects and break out of Tutorial Hell. 1. Finish a tutorial, then add your own stuff to it I like this pproach as its often daunting to start from a blank slate. Finish a tutorial in the usual way, but instead of stopping then and going about your day, try to add new features. You could even change a feature you just reated2. Pause at certain points and try it yourself Any decent tutorial will (hopefully) be broken up into sections e.g Next we’re gonna add a TODO. These are good points in a video/tutorial to pause and try coding that next thing yourself 3. Try the Tutorial before you follow along with it One approach I’m trying with my YouTube channel is to show a working example/provide starter code up front and encourage people to try the project themselves before they follow along. You can try this approach with just about any tutorial 4. Look at your favorite sites/apps for inspiration What apps and sites do you use every day? Let’s take Reddit as an example. I’m not saying “Yo stop doing tutorials and go build a Reddit clone”, but take a small part and try and replicate it.    For example, display a Reddit post that you can upvote. Next, turn this into a list of Reddit posts. Then add comments to each. And so on 5. When you have a handle on smaller projects, build a big one    I personally wouldn’t recommend ya’ll go aiming to build massive projects from the start. This can be disheartening when you get stuck. But you should aim to build a massive project once you feel comfortable. i.e, finished a few smaller ones.This will give you practice with a few things: How to plan then code feature. How to use Google/Reddit/Stackoverflow to solve problems How to think by yourself (no tutorial = no safety net) 6. Scratch your own itch  So recently I noticed I’m dehydrated as hell since I don’t drink enough water but consume copious amounts of coffee. So I made a small app to remind/track how much I drink. I could have gone to the app store and got one but I learned building an app that solves a problem I have Ask friends and family what problems they’re having a see if you can make an app to solve it 7. Overcome the fear Dunno what causes this, but there seems to be a “fear” of starting a new project. Maybe in case we get stuck, get it “wrong”, hit too many bugs etc. The best thing to do is realise you might not get it right, or have all the answers at the start. This is part of the game - overcoming bugs and solving problems as we go 8. It gets easier with practice. The more you practice the more you’ll have those “Ah I’ve seen this shitty problem before” moments, and you can “reuse” code/logic from other problems you’ve solved  9. Just build stuff  Ultimately the best way to learn is to build stuff and write code. Pick something and run with it. What’s the worst that could happen? You’ll “waste” a few hours/days but I know for a fact that you’ll have learned something, which is the main thing     10. Have fun   This doesn’t really solve the problem of breaking out of tutorial hell but I couldn’t end on 9 points. So make sure you’re having fun when building stuff or else it’ll feel like “work”. And remember to stay hydrated.",
      "videos": [
        {
          "title": "How I Plan My Coding Projects",
          "url": "https://www.youtube.com/watch?v=qS4mvrWWO_M"
        },
        {
          "title": "8 Steps To Building A Successful Project",
          "url": "https://www.youtube.com/watch?v=wTrcabKENrY"
        },
        {
          "title": "Full timelapse + walkthrough of building my website",
          "url": "https://www.youtube.com/watch?v=GVTRJa4B4fY"
        },
        {
          "title": "lofi hip hop radio - beats to relax/study to",
          "url": "https://www.youtube.com/watch?v=5qap5aO4i9A"
        }
      ]
    }
  ],
  "feedback": [
    {
      "id": 0,
      "phase": 0,
      "username": "JackieTung",
      "content": "Really helpful pre-work!"
    },
    {
      "username": "BillyBob",
      "content": "Woohoo, passed my coding challenge!",
      "id": 1
    },
    {
      "username": "Mario",
      "content": "Coming up with the idea for the project was hard ! Thanks to this, I was able to get it done in a week. Thank you Mario & Jackie.",
      "id": 2
    }
  ]
}